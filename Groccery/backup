from flask import Flask, render_template, request, redirect, session, flash, jsonify
from mysqlconnection import MySQLConnector
import re

import MySQLdb

conn = MySQLdb.connect("localhost","root","root","grocerry" )
cursor = conn.cursor()

EMAIL_REGEX = re.compile(r'^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9._-]+\.[a-zA-Z]+$')
NAME_REGEX = re.compile(r'[0-9]')
PASS_REGEX = re.compile(r'.*[A-Z].*[0-9]')


app = Flask(__name__)
app.secret_key= 'grocerry'
mysql = MySQLConnector(app,'grocerry')

@app.route('/')
def index():
    print session
    return render_template('index.html')

@app.route('/mail')
def mail():
    print session
    return render_template('mail.html')

@app.route('/products')
def products():
    print session
    return render_template('products.html')

@app.route('/household')
def household():
    print session
    return render_template('household.html')

@app.route('/vegetables')
def vegetables():
    print session
    return render_template('vegetables.html')

@app.route('/kitchen')
def kitchen():
    print session
    return render_template('kitchen.html')

@app.route('/login')
def login():
    print session
    return render_template('login.html')

@app.route('/single')
def single():
    print session
    return render_template('single.html')

@app.route('/admin')
def admin():
    print session
    return render_template('admin.html')

@app.route('/addproduct')
def addproduct():
    print session
    return render_template('add_product.html')

@app.route('/viewmail')
def viewmail():
    print session
    cursor.execute("select * from contact")
    data = cursor.fetchall() 
    return render_template('contact_requests.html', value=data)

@app.route('/logout')
def logout():
    print session
    session.pop('username', None)
    return render_template('index.html')

@app.route('/contact', methods=['POST'])
def contact_user():
    error=""
    for x in request.form:
        if len(request.form[x]) < 1:
            print (x + " cannot be blank!", 'blank')
    

    if len(request.form['Telephone']) < 10 or len(request.form['Telephone']) >10:
        error="Telephone must be 10 digits number!"

    if not EMAIL_REGEX.match(request.form['Email']):
        print ("Email must be a valid email", 'error')
        error= "Email must be a valid email"
    
    if error!="":
        return render_template('mail.html',error=error)
    else:
        print ("All Good!!!!", 'good')
        query = "INSERT INTO contact (name, email, telephone, subject, message) VALUES (:name, :email_id, :mob, :subject, :msg)"
        
        data = {
                'name': request.form['Name'],
                'email_id': request.form['Email'],
                'mob': request.form['Telephone'],
                'subject': request.form['Subject'],
                'msg': request.form['Message']
            }
        
        mysql.query_db(query, data)
        return render_template('mail.html',error="Request Sent!")
    
@app.route('/regu', methods=['POST'])
def register_user():
    print "in register"
    error=""
    input_email = request.form['Email']
    email_query = "SELECT * FROM user WHERE email = :email_id"
    query_data = {'email_id': input_email}
    stored_email = mysql.query_db(email_query, query_data)


    print request.form
    print request.form['Email']
    print session

    for x in request.form:
        if len(request.form[x]) < 1:
            print (x + " cannot be blank!", 'blank')
            error="Fill all Fields"
    

    if len(request.form['Password']) < 5:
        print ("Password must be more than 5 characters", 'password')
        error="Password must be greater than 5 characters"

    if not EMAIL_REGEX.match(request.form['Email']):
        print ("Email must be a valid email", 'error')
        error= "Email must be a valid email"
    
    if stored_email:
        error="Email already exists!"


    if error!="":
        print "error"
        return render_template('login.html',error=error)
        
    else:
        print ("All Good!!!!", 'good')
        query = "INSERT INTO user (uname, email, mob, address, password) VALUES (:username, :email_id, :mob, :address, :pass )"
        
        data = {
                'username': request.form['Username'],
                'email_id': request.form['Email'],
                'mob': request.form['Phone'],
                'address': request.form['Address'],
                'pass': request.form['Password']
            }
        
        mysql.query_db(query, data)

        input_email = request.form['Email']
        email_query = "SELECT * FROM user WHERE email = :email_id"
        query_data = {'email_id': input_email}
        stored_email = mysql.query_db(email_query, query_data)

        
         
        print ("This email address you entered " + input_email + " is a valid email address. Thank you!")
        return render_template('login.html')



@app.route('/loginu', methods=['POST'])
def loginu():
    error=""
    input_uname = request.form['Username']
    input_password = request.form['Password']
    email_query = "SELECT * FROM user WHERE uname = :uname "
    query_data = {'uname': str(input_uname)}
    stored_email = mysql.query_db(email_query, query_data)

    if not stored_email:
        error="User does not exist!"
        return render_template('login.html',error=error)

    else:
        if request.form['Password'] == stored_email[0]['password']:
            print "login success"
            session['username'] = request.form['Username']
            return render_template('products.html')
        
        else:
            error="Wrong password, try again!"
            return render_template('login.html',error=error)
            
        
@app.route('/logina', methods=['POST'])
def logina():
    error=""
    input_uname = request.form['Username']
    input_password = request.form['Password']
    email_query = "SELECT * FROM admin WHERE username = :uname "
    query_data = {'uname': str(input_uname)}
    stored_email = mysql.query_db(email_query, query_data)

    if not stored_email:
        error="User does not exist!"
        return render_template('admin.html',error=error)

    else:
        if request.form['Password'] == stored_email[0]['password']:
            print "login success"
            session['username'] = request.form['Username']
            return render_template('admin_home.html')
        
        else:
            error="Wrong password, try again!"
            return render_template('admin.html',error=error)
        
@app.route('/addproduct1', methods=['POST'])
def addproduct1():
    error=""
    
    for x in request.form:
        if len(request.form[x]) < 1:
            print (x + " cannot be blank!", 'blank')
            error="Fill all Fields"
    
    if error!="":
        print "error"
        return render_template('add_product.html',error=error)
        
    else:
        print ("All Good!!!!", 'good')
        query = "INSERT INTO products (category, pname, quantity, price, pic) VALUES (:category, :pname, :quantity, :price, :pic )"
        
        data = {
                'category': request.form['Category'],
                'pname': request.form['pname'],
                'quantity': request.form['quantity'],
                'price': request.form['price'],
                'pic': request.form['pic']
            }
        
        mysql.query_db(query, data)
         
        return render_template('add_product.html',error="Product Added!")




if __name__ == "__main__":
    app.run(debug=True)

